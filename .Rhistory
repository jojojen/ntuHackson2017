df = data.frame(matrix(unlist(df), nrow=length(df), byrow=T)) %>% lapply(., rm.quot) %>% as.data.frame
colnames(df) <- unlist(df[1,]) %>% as.character
df = df[-1, ]
library(dplyr)
rm.quot <- function(x) {x %>% gsub('"', '', .) %>% return}
uv <- readLines("UV_20151116152215.csv", encoding = "utf8")
uv = uv %>% iconv("utf8", "utf8")
for (i in c(2:length(uv))) {
t <- uv[i] %>% gregexpr('\"', .)
s1 <- t[[1]][1]
e1 <- t[[1]][2]
s2 <- t[[1]][3]
e2 <- t[[1]][4]
rep1 = substr(uv[i], s1, e1) %>% gsub(",", ".", .)
rep2 = substr(uv[i], s2, e2) %>% gsub(",", ".", .)
uv[i] <- paste0(substr(uv[i], 1, s1), rep1, ",", rep2, substr(uv[i], e2, nchar(uv[i])))
}
df = uv %>% strsplit(., split=',', fixed=TRUE)
df = data.frame(matrix(unlist(df), nrow=length(df), byrow=T)) %>% lapply(., rm.quot) %>% as.data.frame
colnames(df) <- unlist(df[1,]) %>% as.character
df = df[-1, ]
View(df)
df$UVI
df$UVI %>% as.character
df$UVI %>% as.character %>% as.numeric
# sessionInfo()
# R version 3.3.2 (2016-10-31)
# Platform: x86_64-apple-darwin13.4.0 (64-bit)
# Running under: macOS Sierra 10.12.5
#
# locale:
#   [1] zh_TW.UTF-8/zh_TW.UTF-8/zh_TW.UTF-8/C/zh_TW.UTF-8/zh_TW.UTF-8
#
# attached base packages:
#   [1] stats     graphics  grDevices utils     datasets  methods   base
#
# other attached packages:
#   [1] dplyr_0.5.0    downloader_0.4 mapproj_1.2-5  maps_3.2.0
# [5] ggmap_2.6.1    ggplot2_2.2.1
#
# loaded via a namespace (and not attached):
#   [1] Rcpp_0.12.11      plyr_1.8.4        bitops_1.0-6
# [4] tools_3.3.2       digest_0.6.12     tibble_1.3.1
# [7] gtable_0.2.0      lattice_0.20-34   png_0.1-7
# [10] rlang_0.1.1       DBI_0.6-1         binman_0.1.0
# [13] proto_1.0.0       stringr_1.2.0     RgoogleMaps_1.4.1
# [16] caTools_1.17.1    grid_3.3.2        R6_2.2.1
# [19] jpeg_0.1-8        XML_3.98-1.7      RSelenium_1.7.1
# [22] sp_1.2-4          reshape2_1.4.2    semver_0.2.0
# [25] magrittr_1.5      scales_0.4.1      assertthat_0.2.0
# [28] geosphere_1.5-5   colorspace_1.3-2  stringi_1.1.2
# [31] lazyeval_0.2.0    openssl_0.9.6     munsell_0.4.3
# [34] wdman_0.2.2       rjson_0.2.15
# install packages
pkgs.needs <- c("ggmap", "mapproj", "downloader", "dplyr")
pkgs.installed <- installed.packages()[,"Package"]
new.pkgs <- pkgs.needs[!(pkgs.needs %in% pkgs.installed)]
if(length(new.packages)) install.packages(new.pkgs)
# install.packages("ggmap", type = "source")
## run this line if you see error message like below:
## GeomRasterAnn was built with an incompatible version of ggproto.
## Please reinstall the package that provides this extension.
library(ggmap)
library(mapproj)
library(downloader) # download
library(dplyr)
# define function
rm.quot <- function(x) {x %>% gsub('"', '', .) %>% return}
# main prog
## load data
url <- "https://blog.gtwang.org/wp-content/uploads/2015/11/UV_20151116152215.csv"
fileName <- "UV_20151116152215.csv"
download(url, fileName, mode = "wb")
uv <- readLines("UV_20151116152215.csv", encoding = "utf8")
if (file.exists(fileName)) file.remove(fileName)
## tidy data
uv = uv %>% iconv("utf8", "utf8")
for (i in c(2:length(uv))) {
t <- uv[i] %>% gregexpr('\"', .)
s1 <- t[[1]][1]
e1 <- t[[1]][2]
s2 <- t[[1]][3]
e2 <- t[[1]][4]
rep1 = substr(uv[i], s1, e1) %>% gsub(",", ".", .)
rep2 = substr(uv[i], s2, e2) %>% gsub(",", ".", .)
uv[i] <- paste0(substr(uv[i], 1, s1), rep1, ",", rep2, substr(uv[i], e2, nchar(uv[i])))
}
df = uv %>% strsplit(., split=',', fixed=TRUE)
df = data.frame(matrix(unlist(df), nrow=length(df), byrow=T)) %>% lapply(., rm.quot) %>% as.data.frame
colnames(df) <- unlist(df[1,]) %>% as.character
df = df[-1, ]
df$UVI <- df$UVI %>% as.character %>% as.numeric
lon.deg <- sapply((strsplit(as.character(df$WGS84Lon), ".", fixed = TRUE)), as.numeric)
for (i in c(1:length(lon.deg))) {
df$lon[i] <- lon.deg[[i]][1] + lon.deg[[i]][2]/60 + lon.deg[[i]][3]/3600
}
lat.deg <- sapply((strsplit(as.character(df$WGS84Lat), ".", fixed = TRUE)), as.numeric)
for (i in c(1:length(lat.deg))) {
df$lat[i] <- lat.deg[[i]][1] + lat.deg[[i]][2]/60 + lat.deg[[i]][3]/3600
}
## ploting
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map) + geom_point(aes(x = lon, y = lat, size = UVI), data = df)
View(df)
download(url, fileName, mode = "wb")
if (file.exists(fileName)) file.remove(fileName)
# install packages
pkgs.needs <- c("ggmap", "jsonlite", "dplyr", "stringr", "RSelenium")
pkgs.installed <- installed.packages()[,"Package"]
new.pkgs <- pkgs.needs[!(pkgs.needs %in% pkgs.installed)]
if(length(new.packages)) install.packages(new.pkgs)
library(dplyr)      # data manipulation & pipe line
library(stringr)    # str_pad
library(RSelenium)  # selenium
library(ggmap)
library(jsonlite)
# set working directory
oriDir <- getwd()
mainDir <- "/Users/jen/Documents/ntuHackson2017"
setwd(mainDir)
# seleniumDir <- "./seleniumDownload"
# ifelse(!dir.exists(file.path(seleniumDir)), dir.create(file.path(seleniumDir)), FALSE)
# setwd(seleniumDir)
# set download folder
downloadFolder <- getwd()
eCaps <- list(
chromeOptions =
list(prefs = list(
"profile.default_content_settings.popups" = 0L,
"download.prompt_for_download" = FALSE,
"download.default_directory" = downloadFolder
)
)
)
# set remote
url= "http://data.taipei/youbike"
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444,
browserName ="chrome",
extraCapabilities=eCaps
)
# default mapt
map <- get_map(location = 'Taipei', zoom = 12)
# download
remDr$open()           # open browser
remDr$navigate(url)    # website to crawl
remDr$close()
time <- format(Sys.time(), "%X")
fileName <- paste0("YouBikeTP", "_", time, ".txt")
file.rename("YouBikeTP.gz", fileName)
# clean
json <- read_json(fileName)
df <- data.frame()
for (i in c(1:length(json$retVal))){
data <- json$retVal[[i]] %>% as.data.frame
df <- rbind(df, data)
}
df$tot <- df$tot %>% as.character %>% as.numeric
df$lng <- df$lng %>% as.character %>% as.numeric
df$lat <- df$lat %>% as.character %>% as.numeric
df$bikes <- df$sbi
df$space <- df$bemp
# ploting
jpeg(paste0('plot_', time, '.jpg'), width=800, height=600)
ggmap(map, darken = 0.5) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('red1')), data = df %>% subset(bikes == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('cyan')), data = df %>% subset(space == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('gray')), data = df %>% subset(bikes != 0 & space != 0)) +
scale_size_continuous(range = c(0,2))
dev.off()
setwd(oriDir)
# set working directory
oriDir <- getwd()
mainDir <- "/Users/jen/Documents/DataJam_2017-06-10"
setwd(mainDir)
# main prog
repeat {
startTime <- Sys.time()
source(r, echo = TRUE)
sleepTime <- startTime + 15*60 - Sys.time()
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
# output data and restore env
setwd(oriDir)
repeat {
startTime <- Sys.time()
source(youbike_crawler.R, echo = TRUE)
sleepTime <- startTime + 15*60 - Sys.time()
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
repeat {
startTime <- Sys.time()
source('youbike_crawler.R', echo = TRUE)
sleepTime <- startTime + 15*60 - Sys.time()
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
list.files()
mainDir <- "/Users/jen/Documents/ntuHackson2017"
setwd(mainDir)
list.files()
repeat {
startTime <- Sys.time()
source(youbike_crawler.R, echo = TRUE)
sleepTime <- startTime + 15*60 - Sys.time()
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
repeat {
startTime <- Sys.time()
source('youbike_crawler.R', echo = TRUE)
sleepTime <- startTime + 15*60 - Sys.time()
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
Sys.time()
startTime + 15*60
Sys.time()
startTime + 15*60
startTime + 5*60
Sys.time()
startTime + 5*60
startTime <- Sys.time()
startTime
startTime + 5*60
startTime <- Sys.time()
startTime
startTime + 15*60
sleepTime <- startTime + 15*60 - Sys.time()
sleepTime
sleepTime <- startTime + 15*60 - Sys.time()
sleepTime
repeat {
startTime <- Sys.time()
source('youbike_crawler.R', echo = TRUE)
sleepTime <- startTime + 15*60 - Sys.time()
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
while(1){
startTime <- Sys.time()
source('youbike_crawler.R', echo = TRUE)
sleepTime <- startTime + 15*60 - Sys.time()
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
pkgs.needs <- c("ggmap", "jsonlite", "dplyr", "stringr", "RSelenium", "taskscheduleR")
pkgs.installed <- installed.packages()[,"Package"]
new.pkgs <- pkgs.needs[!(pkgs.needs %in% pkgs.installed)]
if(length(new.packages)) install.packages(new.pkgs)
library(dplyr)      # data manipulation & pipe line
library(stringr)    # str_pad
library(RSelenium)  # selenium
library(ggmap)
library(jsonlite)
library(taskscheduleR)
install.packages("taskscheduleR")
devtools::install_github("rstudio/addinexamples", type = "source")
install.packages("devtools")
devtools::install_github("rstudio/addinexamples", type = "source")
# install packages
pkgs.needs <- c("ggmap", "jsonlite", "dplyr", "stringr", "RSelenium")
pkgs.installed <- installed.packages()[,"Package"]
new.pkgs <- pkgs.needs[!(pkgs.needs %in% pkgs.installed)]
if(length(new.packages)) install.packages(new.pkgs)
library(dplyr)      # data manipulation & pipe line
library(stringr)    # str_pad
library(RSelenium)  # selenium
library(ggmap)
library(jsonlite)
# set working directory
oriDir <- getwd()
mainDir <- "/Users/jen/Documents/ntuHackson2017"
setwd(mainDir)
# seleniumDir <- "./seleniumDownload"
# ifelse(!dir.exists(file.path(seleniumDir)), dir.create(file.path(seleniumDir)), FALSE)
# setwd(seleniumDir)
# set download folder
downloadFolder <- getwd()
eCaps <- list(
chromeOptions =
list(prefs = list(
"profile.default_content_settings.popups" = 0L,
"download.prompt_for_download" = FALSE,
"download.default_directory" = downloadFolder
)
)
)
# set remote
url= "http://data.taipei/youbike"
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444,
browserName ="chrome",
extraCapabilities=eCaps
)
# default mapt
map <- get_map(location = 'Taipei', zoom = 12)
# download
remDr$open()           # open browser
remDr$navigate(url)    # website to crawl
remDr$close()
time <- format(Sys.time(), "%X")
fileName <- paste0("YouBikeTP", "_", time, ".txt")
file.rename("YouBikeTP.gz", fileName)
# clean
json <- read_json(fileName)
df <- data.frame()
for (i in c(1:length(json$retVal))){
data <- json$retVal[[i]] %>% as.data.frame
df <- rbind(df, data)
}
df$tot <- df$tot %>% as.character %>% as.numeric
df$lng <- df$lng %>% as.character %>% as.numeric
df$lat <- df$lat %>% as.character %>% as.numeric
df$bikes <- df$sbi
df$space <- df$bemp
# ploting
jpeg(paste0('plot_', time, '.jpg'), width=800, height=600)
ggmap(map, darken = 0.5) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('red1')), data = df %>% subset(bikes == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('cyan')), data = df %>% subset(space == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('gray')), data = df %>% subset(bikes != 0 & space != 0)) +
scale_size_continuous(range = c(0,2))
dev.off()
setwd(oriDir)
sleepTime
startTime <- Sys.time()
sleepTime <- startTime + 15*60 - Sys.time()
sleepTime
sleepTime <- startTime + 20 - Sys.time()
print('1')
Sys.sleep(sleepTime)
sleepTime %>% class
Sys.sleep(3)
sleepTime %>% as.numeric
startTime <- Sys.time()
sleepTime <- startTime + 20 - Sys.time()
sleepTime <- sleepTime %>% as.numeric
sleepTime
# main prog
while(1){
startTime <- Sys.time()
source('youbike_crawler.R', echo = TRUE)
sleepTime <- startTime + 1*60 - Sys.time()
sleepTime <- sleepTime %>% as.numeric
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
while(1){
startTime <- Sys.time()
source('youbike_crawler.R', echo = TRUE)
sleepTime <- startTime + 15*60 - Sys.time()
sleepTime <- sleepTime %>% as.numeric
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
sleepTime
startTime <- Sys.time()
sleepTime <- startTime + 15*60 - Sys.time()
sleepTime
sleepTime <- sleepTime %>% as.numeric
sleepTime
sleepTime <- sleepTime %>% as.numeric %>% .*60
sleepTime <- sleepTime*60
sleepTime
while(1){
startTime <- Sys.time()
source('youbike_crawler.R', echo = TRUE)
sleepTime <- startTime + 15*60 - Sys.time()
sleepTime <- sleepTime %>% as.numeric
sleepTime <- sleepTime*60
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
while(1){
startTime <- Sys.time()
source('youbike_crawler.R', echo = TRUE)
sleepTime <- startTime + 15*60 - Sys.time()
sleepTime <- sleepTime %>% as.numeric
sleepTime <- sleepTime*60
if (sleepTime > 0)
Sys.sleep(sleepTime)
}
list.files()
list.files('*.txt')
list.files(pattern = '*.txt')
list_file <- list.files(pattern = '*.txt')
list_file
source('~/.active-rstudio-document', echo=TRUE)
substring(list_file[1], 1, 20)
substring(list_file[1], 1, 19)
for (i in list.files[1]){
# clean
json <- read_json(i)
df <- data.frame()
for (i in c(1:length(json$retVal))){
data <- json$retVal[[i]] %>% as.data.frame
df <- rbind(df, data)
}
df$tot <- df$tot %>% as.character %>% as.numeric
df$lng <- df$lng %>% as.character %>% as.numeric
df$lat <- df$lat %>% as.character %>% as.numeric
df$bikes <- df$sbi
df$space <- df$bemp
# ploting
jpeg(paste0('plot_', substring(i, 1, 19), '.jpg'), width=800, height=600)
ggmap(map, darken = 0.5) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('red1')), data = df %>% subset(bikes == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('cyan')), data = df %>% subset(space == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('yellow')), data = df %>% subset(bikes <= 3 & bikes>0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('gray')), data = df %>% subset(bikes != 0 & space != 0)) +
scale_size_continuous(range = c(0,2))
dev.off()
}
i = list.files[1]
list.files[1]
i = list.file[1]
list_file <- list.files(pattern = '*.txt')
i = list.file[1]
i = list_file[1]
json <- read_json(i)
df <- data.frame()
for (i in c(1:length(json$retVal))){
data <- json$retVal[[i]] %>% as.data.frame
df <- rbind(df, data)
}
df$tot <- df$tot %>% as.character %>% as.numeric
df$lng <- df$lng %>% as.character %>% as.numeric
df$lat <- df$lat %>% as.character %>% as.numeric
df$bikes <- df$sbi
df$space <- df$bemp
jpeg(paste0('plot_', substring(i, 1, 19), '.jpg'), width=800, height=600)
ggmap(map, darken = 0.5) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('red1')), data = df %>% subset(bikes == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('cyan')), data = df %>% subset(space == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('yellow')), data = df %>% subset(bikes <= 3 & bikes>0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('gray')), data = df %>% subset(bikes != 0 & space != 0)) +
scale_size_continuous(range = c(0,2))
dev.off()
View(data)
View(df)
df %>% str
list_file <- list.files(pattern = '*.txt')
i = list_file[1]
json <- read_json(i)
df <- data.frame()
for (i in c(1:length(json$retVal))){
data <- json$retVal[[i]] %>% as.data.frame
df <- rbind(df, data)
}
df$tot <- df$tot %>% as.character %>% as.numeric
df$lng <- df$lng %>% as.character %>% as.numeric
df$lat <- df$lat %>% as.character %>% as.numeric
df$bikes <- df$sbi %>% as.character %>% as.numeric
df$space <- df$bemp %>% as.character %>% as.numeric
jpeg(paste0('plot_', substring(i, 1, 19), '.jpg'), width=800, height=600)
ggmap(map, darken = 0.5) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('red1')), data = df %>% subset(bikes == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('cyan')), data = df %>% subset(space == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('yellow')), data = df %>% subset(bikes <= 3 & bikes>0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('gray')), data = df %>% subset(bikes != 0 & space != 0)) +
scale_size_continuous(range = c(0,2))
dev.off()
list_file[1]
list_file <- list.files(pattern = '*.txt')
i = list_file[1]
json <- read_json(i)
df <- data.frame()
for (i in c(1:length(json$retVal))){
data <- json$retVal[[i]] %>% as.data.frame
df <- rbind(df, data)
}
df$tot <- df$tot %>% as.character %>% as.numeric
df$lng <- df$lng %>% as.character %>% as.numeric
df$lat <- df$lat %>% as.character %>% as.numeric
df$bikes <- df$sbi %>% as.character %>% as.numeric
df$space <- df$bemp %>% as.character %>% as.numeric
df
jpeg(paste0('plot_', substring(i, 1, 19), '.jpg'), width=800, height=600)
ggmap(map, darken = 0.5) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('red1')), data = df %>% subset(bikes == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('cyan')), data = df %>% subset(space == 0)) +
# geom_point(aes(x = lng, y = lat, size = 1, colour = I('yellow')), data = df %>% subset(bikes <= 3 & bikes>0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('gray')), data = df %>% subset(bikes != 0 & space != 0)) +
scale_size_continuous(range = c(0,2))
map <- get_map(location = 'Taipei', zoom = 12)
list_file <- list.files(pattern = '*.txt')
i = list_file[1]
json <- read_json(i)
df <- data.frame()
for (i in c(1:length(json$retVal))){
data <- json$retVal[[i]] %>% as.data.frame
df <- rbind(df, data)
}
df$tot <- df$tot %>% as.character %>% as.numeric
df$lng <- df$lng %>% as.character %>% as.numeric
df$lat <- df$lat %>% as.character %>% as.numeric
df$bikes <- df$sbi %>% as.character %>% as.numeric
df$space <- df$bemp %>% as.character %>% as.numeric
jpeg(paste0('plot_', substring(i, 1, 19), '.jpg'), width=800, height=600)
ggmap(map, darken = 0.5) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('red1')), data = df %>% subset(bikes == 0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('cyan')), data = df %>% subset(space == 0)) +
# geom_point(aes(x = lng, y = lat, size = 1, colour = I('yellow')), data = df %>% subset(bikes <= 3 & bikes>0)) +
geom_point(aes(x = lng, y = lat, size = 1, colour = I('gray')), data = df %>% subset(bikes != 0 & space != 0)) +
scale_size_continuous(range = c(0,2))
dev.off()
substring(list_file[1], 1, 19)
